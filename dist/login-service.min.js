!function(){"use strict";var a=angular.module("eha.login-service",["pouchdb"]).value("localforage",window.localforage).provider("ehaLoginService",function(){var a,b=null,c=function(){var b=prompt("Username?"),c=prompt("Password?");return a.when([b,c])};this.config=function(a){if(a.notificationService){if("function"!=typeof c)throw new Error("notificationService must be a function that returns a promise");c=a.notificationService}a.database&&(b=a.database)},this.$get=["$q","localforage","pouchDB",function(d,e,f){function g(a){return function(){var b=d.defer(),c=[].slice.call(arguments,0);return c.push(function(a,c){a?b.reject(a):b.resolve(c)}),e[a].apply(e,c),b.promise}}a=d;var h,i=this,j=function(){if(!b)throw new Error('loginService must be configured with  .config({ database: "<url/db_name to couchdb>"');return h=h||f(b)},k=g("setItem"),l=g("getItem"),m=g("removeItem"),n=function(a,b){var c=[k("username",a),k("password",b)];return d.all(c)},o=function(){return d.all([l("username"),l("password")])},p=function(){return o().then(function(a){return!(!a[0]||!a[1])})};return i.maybeShowLoginUi=function(){return p().then(function(a){return a?o():c().then(function(a){return n.apply(null,a)}).then(o)})},i.hasLocalCreds=function(){return p()},i.login=function(a,b){return j().login(a,b)},i.renew=function(){return p().then(function(a){return a?o().then(function(a){return i.login(a[0],a[1])}):d.reject({status:401,message:"credentials not found"})})},i.logout=function(){return d.all([m("username"),m("password")])},i.storeCredentials=function(a,b){return n(a,b)},i}]});"undefined"!=typeof module&&module.exports&&(module.exports=a)}();