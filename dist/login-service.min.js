!function(){"use strict";var a=angular.module("eha.login-service",["pouchdb"]).value("localforage",window.localforage).provider("ehaLoginService",function(){var a=null;this.config=function(b){a=b},this.$get=["$q","localforage","pouchDB",function(b,c,d){function e(a){return function(){var d=b.defer(),e=[].slice.call(arguments,0);return e.push(function(a,b){a?d.reject(a):d.resolve(b)}),c[a].apply(c,e),d.promise}}var f=this,g=function(){var a=prompt("Username?"),c=prompt("Password?");return b.when([a,c])};f.config=function(a){if("function"!=typeof a)throw new Error("notification service must be a function that returns a promise");g=a};var h,i=function(){if(!a)throw new Error('loginService must be configured with  .config({ database: "<url/db_name to couchdb>"');return h=h||d(a)},j=e("setItem"),k=e("getItem"),l=e("removeItem"),m=function(a,c){var d=[j("username",a),j("password",c)];return b.all(d)},n=function(){return b.all([k("username"),k("password")])},o=function(){return n().then(function(a){return!(!a[0]||!a[1])})};return f.maybeShowLoginUi=function(){return o().then(function(a){return a?n():g().then(function(a){return m.apply(null,a)}).then(n)})},f.hasLocalCreds=function(){return o()},f.login=function(a,b){var c=m.bind(null,a,b);return i().login(a,b).then(c)},f.renew=function(){return o().then(function(a){return a?n().then(function(a){return f.login(a[0],a[1])}):b.reject({status:401,message:"credentials not found"})})},f.logout=function(){return b.all([l("username"),l("password")])},f.storeCredentials=function(a,b){return m(a,b)},f}]});"undefined"!=typeof module&&module.exports&&(module.exports=a)}();